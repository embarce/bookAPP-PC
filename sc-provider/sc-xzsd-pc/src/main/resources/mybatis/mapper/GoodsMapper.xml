<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzsd.pc.goods.dao.GoodsDao">
    <!--统计要新增的商品数量-->
    <select id="countgoodsBybookId" parameterType="java.lang.String" resultType="int">
        select count(bookId)
        from t_goods_table
        where is_delete = 0
        and bookId = #{bookId}
    </select>
    <!--新增商品-->
    <insert id="addGoods" parameterType="com.xzsd.pc.goods.entity.goodsInfo">
        insert into t_goods_table
        (goods_name,
         good_id,
         price,
         is_delete,
         create_name,
         create_time,
         version,
         author,
         publisher,
         introduction,
         bookId,
         status,
         picture,
         category,
         stock,
         introduce,
         cost_price,
         outside_name,
         cateCode
         )
        values
           (#{goodsName},
            #{goodsId},
            #{price},
            #{isDeleted},
            #{createBy},
            now(),
            0,
            #{author},
            #{publisher},
            #{introduction},
            #{bookId},
            3,
            #{picture},
            #{category},
            #{stock},
            #{introduce},
            #{cost},
            #{outsideName},
            #{cateCode}
            )
    </insert>
    <!--查询商品列表分页查询-->
    <select id="listGoodsByPage" parameterType="com.xzsd.pc.goods.entity.goodsInfo" resultType="com.xzsd.pc.goods.entity.goodsVO">
        select
            a.goods_name goodsName,
            a.cost_price cost,
            a.good_id goodsId,
            a.price price,
            b.cate_name code,
            c.cate_name cateName,
            a.goodsSales goodsSales,
            a.introduce  introduce,
            a.introduction introduction,
            a.status status,
            a.goodsShelfTime goodsShelfTime,
            a.browse_volume goodsViewsNum,
            a.outside_name outsideName,
            a.picture picture,
            a.stock stock,
            a.version version,
            a.bookId bookId
        FROM
            t_goods_table a,
            t_cate_table b,
            t_cate_table c
        WHERE
            a.is_delete = 0
        and a.category = c.cate_id
        AND c.cate_id_parent = b.cate_id
        <if test="publisher != null and publisher != ''">
            and a.publisher like concat('%', #{publisher}, '%')
        </if>
        <if test="status != null and status != ''">
            and a.status like concat('%', #{status}, '%')
        </if>
        <if test="author != null and author != ''">
            and a.author like concat('%', #{author}, '%')
        </if>
        <if test="introduce != null and introduce != ''">
            and a.introduce like concat('%', #{introduce}, '%')
        </if>
        <if test="goodsName != null and goodsName != ''">
            and a.goods_name like concat('%', #{goodsName}, '%')
        </if>
        order by good_id desc
    </select>

    <!--删除商品-->
    <update id="deleteGoods" parameterType="java.lang.String">
        update t_goods_table
        set
        is_delete = 1,
        change_time = now(),
        change_name=#{userId},
        version = version + 1
        where good_id in
        <foreach item="item" index="index" collection="listCode" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
    <!--删除热门商品-->
    <update id="deleteHotGoodsByGoodsId" parameterType="java.lang.String">
        update t_picture_table
        set
        is_delete = 1,
        change_time = now(),
        change_name=#{userId},
        version = version + 1
        where goods_id in
        <foreach item="item" index="index" collection="listCode" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
    <!--修改商品信息-->
    <update id="updateGoods" parameterType="com.xzsd.pc.goods.entity.goodsInfo">
        update t_goods_table
        set
            goods_name    = #{goodsName},
            price   = #{price},
            stock          = #{stock},
            introduce        = #{introduce},
            picture        = #{picture},
            category       = #{category},
            cateCode=#{cateCode},
            cost_price       = #{cost},
            outside_name       = #{outsideName},
            author       = #{author},
            publisher       = #{publisher},
            introduction = #{introduction},
            status       =#{status},
            change_name   = #{lastModifiedBy},
            version      = version + 1
         where good_id=#{goodsId}
         and version = #{version}
    </update>
    <!--查询商品详情信息-->
    <select id="getGoodsByGoodsId" parameterType="java.lang.String" resultType="com.xzsd.pc.goods.entity.goodsInfo">
        SELECT
            a.goods_name goodsName,
            a.good_id goodId,
            a.price price,
            a.stock stock,
            a.introduce introduce,
            a.picture picture,
            a.category category,
            a.cateCode cateCode,
            a.cost_price cost_price,
            a.outside_name outsideName,
            a.author author,
            a.publisher publisher,
            a.introduction introduction,
            a.STATUS status,
            a.bookId bookId,
            a.goodsShelfTime goodsShelfTime,
            a.browse_volume  browseVolume,
            b.cate_name cate,
            c.cate_name cateName
        FROM
            t_goods_table a,
            t_cate_table b,
            t_cate_table c
        WHERE
            good_id=#{goodsId}
            AND a.category = c.cate_id
            AND c.cate_id_parent = b.cate_id
    </select>

    <!--上架商品-->
    <update id="updateGoodsUpper" parameterType="com.xzsd.pc.goods.entity.goodsInfo">
        update t_goods_table
        set
        status = 1,
        goodsShelfTime=now(),
        change_time = now(),
        version = version + 1
        where good_id in
        <foreach item="item" index="index" collection="listCode" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
    <!--下架商品-->
    <update id="updateGoodsLower" parameterType="com.xzsd.pc.goods.entity.goodsInfo">
        update t_goods_table
        set
        status = 2,
        change_time = now(),
        version = version + 1
        where good_id in
        <foreach item="item" index="index" collection="listCode" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
    <select id="listGoodsClassify" resultType="com.xzsd.pc.goods.entity.classifVO">
        SELECT
            cate_id classifyId,
            cate_name classifyName
        FROM
            t_cate_table
        WHERE
            cate_id_parent =0
    </select>
    <select id="listGoodsClassifyByPid" parameterType="java.lang.String" resultType="com.xzsd.pc.goods.entity.classifVO">
        SELECT
            cate_id classifyId,
            cate_name classifyName
        FROM
            t_cate_table
        WHERE
            cate_id_parent =#{classifyId}
    </select>
</mapper>